{"version":3,"sources":["arrow.svg","Pagination.jsx","Item.jsx","Results.jsx","useFetch.js","search.svg","searchspring.svg","shopping-cart.svg","ShoppingCart.jsx","App.js","Footer.jsx","reportWebVitals.js","index.js"],"names":["Pagination","paginate","page","changePage","query","className","begin","end","totalResults","onClick","src","arrow","alt","nums","paginateAmount","totalPages","i","push","paginatedNumbers","disabled","Item","props","genericImg","imageUrl","name","onError","event","target","title","split","slice","join","price","msrp","Results","data","length","setPage","map","result","description","id","useFetch","useState","setData","loading","setLoading","hasError","setHasError","useEffect","a","console","log","fetch","then","response","json","recievedData","catch","err","fetchResults","ShoppingCart","shopping","App","input","setInput","setQuery","isFocused","setIsFocused","handleSubmit","preventDefault","searchspring","onSubmit","type","search","value","onChange","placeholder","onFocus","onBlur","color","height","width","timeout","results","pagination","Footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7289f81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow.6e5063c1.svg\";","import React from \"react\";\nimport arrow from \"./arrow.svg\";\n\nfunction Pagination({ paginate, page, changePage, query }) {\n  // TODO: Fix this logic rendering to only show 6\n  // at any given time with reference to current page\n  // Create array of paginated numbers\n  const paginatedNumbers = () => {\n    let nums = []; // Hold paginated JSX\n    let paginateAmount = paginate.totalPages > 6 ? 6 : paginate.totalPages; // Only show 6\n    for (let i = 1; i <= paginateAmount; i++) {\n      nums.push(\n        <button\n          key={i}\n          onClick={() => changePage(i)}\n          className={\n            i === page ? \"active pagination__link\" : \"pagination__link\"\n          }\n        >\n          {i}\n        </button>\n      );\n    }\n    if (paginate.totalPages > 6) {\n      nums.push(\n        <button\n          key={paginate.totalPages}\n          onClick={() => changePage(paginate.totalPages)}\n          className={\n            paginate.totalPages === page\n              ? \"active pagination__link\"\n              : \"pagination__link\"\n          }\n        >\n          {`...${paginate.totalPages}`}\n        </button>\n      );\n    }\n    return nums;\n  };\n\n  return (\n    <div className=\"pagination\">\n      <h1 className=\"pagination__title\">\n        {`Showing ${paginate.begin}-${paginate.end} of ${paginate.totalResults} results for '${query}'`}\n      </h1>\n      <div className=\"pagination__links\">\n        <button\n          onClick={() => changePage((page) => page - 1)}\n          className={page === 1 ? \"disabled\" : \"\"}\n        >\n          <img\n            className=\"arrow left\"\n            src={arrow}\n            alt=\"toggle previous pagination\"\n          />\n        </button>\n        {paginatedNumbers()}\n        <button\n          onClick={() => changePage((page) => page + 1)}\n          disabled={page === paginate.totalPages}\n          className={page === paginate.totalPages ? \"disabled\" : \"\"}\n        >\n          <img\n            className=\"arrow right\"\n            src={arrow}\n            alt=\"toggle previous pagination\"\n          />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Pagination;\n","import React from \"react\";\n\nfunction Item(props) {\n  //const genericImg = \"https://dummyimage.com/467x700/#/0011ff.jpg\"\n  const genericImg = \"https://placekitten.com/467/700\";\n\n  // If no image loads we'll put a new one...of kitties :')\n  const addDefaultSrc = (event) => {\n    event.target.src = genericImg;\n  }\n\n  return (\n    <div className=\"item\">\n      <img\n        className=\"item__img\"\n        src={props.imageUrl ? props.imageUrl : genericImg}\n        alt={props.name}\n        onError={addDefaultSrc}\n      />\n      <h1 className=\"item__title\">\n        {/* Grab the last 3 words of the title bc 'design' */}\n        {props.title ? props.title.split(\" \").slice(-3).join(\" \") : \"lol\"}\n      </h1>\n      <div className=\"item__price\">\n        <p className=\"item__price__current\">${props.price}</p>\n        <p className=\"item__price__msrp\">${props.msrp}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Item;\n","import React from \"react\";\nimport Pagination from \"./Pagination.jsx\";\nimport Item from \"./Item.jsx\";\n\nfunction Results(props) {\n  if (!props.data || props.data.length === 0) {\n    return <div className=\"center-aligned\">Results not found for '{props.query}'</div>;\n  } else {\n    return (\n      <>\n        <Pagination\n          paginate={props.paginate}\n          page={props.page}\n          changePage={props.setPage}\n          query={props.query}\n        />\n        <div className=\"results__response\">\n        {props.data.map((result) => (\n          <Item\n            key={result.id}\n            imageUrl={result.imageUrl}\n            description={result.name}\n            title={result.title}\n            price={result.price}\n            msrp={result.msrp}\n          />\n        ))}\n        </div>\n        <Pagination\n          paginate={props.paginate}\n          page={props.page}\n          changePage={props.setPage}\n          query={props.query}\n        />\n      </>\n    );\n  }\n}\n\nexport default Results;\n","import { useState, useEffect } from \"react\";\n\nfunction useFetch(query, page) {\n  const [data, setData] = useState({}); // API data\n  const [loading, setLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      console.log(`...fetching results for '${query}'`)\n      setLoading(true);\n      await fetch(\n        `http://api.searchspring.net/api/search/search.json?siteId=scmq7n&q=${query}&resultsFormat=native&page=${page}`\n      )\n        .then((response) => response.json())\n        .then((recievedData) => {\n          setData(recievedData);\n          setLoading(false);\n        })\n        .catch((err) => {\n          setHasError(true);\n          console.log(\"lol u messed up:\", err);\n        });\n    };\n    fetchResults();\n\n    // Re-run everytime query or page is changed :')\n  }, [query, page]);\n\n  return [data, loading, hasError];\n}\n\nexport default useFetch;\n","export default __webpack_public_path__ + \"static/media/search.99a39d29.svg\";","export default __webpack_public_path__ + \"static/media/searchspring.90ca3518.svg\";","export default __webpack_public_path__ + \"static/media/shopping-cart.b1dff17a.svg\";","import React from \"react\";\nimport shopping from \"./shopping-cart.svg\";\n\nfunction ShoppingCart() {\n  return (\n      <div className=\"shopping\">\n        <img className=\"shopping__img\" src={shopping} alt=\"Shopping Cart\" />\n        <span className=\"shopping__count\">0</span>\n      </div>\n  );\n}\n\nexport default ShoppingCart;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport useFetch from \"./useFetch\";\nimport Loader from \"react-loader-spinner\";\nimport search from \"./search.svg\";\nimport searchspring from \"./searchspring.svg\"\nimport ShoppingCart from \"./ShoppingCart\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\"); // Keep track of search input\n  const [query, setQuery] = useState(\"new\"); // Search query to submit\n  const [page, setPage] = useState(1); // Current page searching\n  const [data, loading, hasError] = useFetch(query, page); // Custom hook for data fetching :)\n  const [isFocused, setIsFocused] = useState(false); // Track when input is focused to color the form background #a11y\n\n  const handleSubmit = (event) => {\n    setQuery(input);\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <header>\n        <img className=\"hero-text\" src={searchspring} alt=\"Searchspring Logo\" />\n        <form\n          onSubmit={handleSubmit}\n          className={isFocused ? \"search focused\" : \"search\"}\n        >\n          <button\n            onClick={handleSubmit}\n            className=\"search__submit-button\"\n            type=\"submit\"\n          >\n            <img className=\"search__img\" src={search} alt=\"Search button\" />\n          </button>\n          <input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n            placeholder=\"Search for clothing\"\n            className=\"search__input\"\n            onFocus={() => setIsFocused(!isFocused)}\n            onBlur={() => setIsFocused(!isFocused)}\n            type=\"text\"\n          />\n        </form>\n        <ShoppingCart />\n      </header>\n      <main className=\"results\">\n          {hasError && <div className=\"center-aligned\">Something went wrong in your request...</div>}\n        {loading ? (\n          <Loader\n              className=\"center-aligned\"\n              type=\"Oval\"\n              color=\"#707070\"\n              height={120}\n              width={120}\n              timeout={3000}\n            />\n          ) : (\n            <Results\n              data={data.results}\n              paginate={data.pagination}\n              page={page}\n              setPage={setPage}\n              query={query}\n            />\n          )}\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>© 2021 Searchspring API - All rights reserved.</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Footer from './Footer.jsx'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}